package ru.kiporskiy.kotlin.sotring

/**
 * Пузырьковая сортировка.
 *
 * Самый простой вид сортировки: на каждом проходе элементы сравниваются попарно; если предыдущий элемент больше
 * следующего, то элементы меняются местами.
 * Простая сортировка выполняется за O(N^2).
 * В среднем количество сравнений N^2/2, количество перестановок N^2/4.
 */
class BubbleSorting : Sorting {

    override fun <T : Comparable<T>> sort(elements: Array<T>) {
        //количество проходов в худшем случае равно количеству элементов
        for (step in 0..elements.size) {

            //подсчет количества перестановок (небольшая дополнительная оптимизация. если элементы отсортированы раньше,
            //чем step достигнет количества элементов, то дальше проходить нет смысла)
            var changes = 0

            //проходим по всем элементам, кроме тех, которые уже 100% отсортированы (самый большой элемент, как "пузырёк"
            //переместился на самый верх массива)
            for (i in 0..(elements.size - 2 - step)) {
                //если i элемент больше i + 1, то меняем местами
                if (elements[i] > elements[i + 1]) {
                    val tmp = elements[i + 1]
                    elements[i + 1] = elements[i]
                    elements[i] = tmp
                    //фиксируем количество перестановок
                    changes++
                }
            }

            //если перестановок не было - завершить обработку
            if (changes == 0)
                break
        }
    }
}
